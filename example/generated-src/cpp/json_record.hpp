// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#pragma once

#include "rc.hpp"
#include <json+extension.hpp>
#include <json.hpp>
#include <optional>
#include <string>
#include <utility>

namespace textsort {

struct  JsonRecord {
    std::optional<Rc> optional_rc;

    JsonRecord(std::optional<Rc> optional_rc_)
    : optional_rc(std::move(optional_rc_))
    {}

    JsonRecord() = default;
};

}  // namespace textsort


namespace nlohmann {
    template <>
    struct adl_serializer<::textsort::JsonRecord>  {
        static ::textsort::JsonRecord from_json(const json & j)  {
            auto result = ::textsort::JsonRecord();
            if (j.contains("optional_rc")) {
                j.at("optional_rc").get_to(result.optional_rc);
            }
            return result;
        }
        static void to_json(json & j, ::textsort::JsonRecord item)  {
            j = json {
                {"optional_rc", item.optional_rc}
            }
            ;
        }
    }
    ;
}
