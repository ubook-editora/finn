// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "hello.hpp"

#include "cw__hello.hpp"
#include "dh__my_enum.hpp"
#include "dh__my_record.hpp"
#include "my_enum.hpp"

std::shared_ptr<::textsort::Hello> DjinniWrapperHello::get(djinni::WrapperRef<DjinniWrapperHello> dw) {
    if (dw) {
        return dw->wrapped_obj;
    }
    return nullptr;
}

void hello___wrapper_add_ref(DjinniWrapperHello * dh) {
    dh->ref_count.fetch_add(1);
}
void hello___wrapper_dec_ref(DjinniWrapperHello * dh) {
    const size_t ref = dh->ref_count.fetch_sub(1);
    if (ref == 1) {// value before sub is returned
        delete dh;
    }
}
djinni::Handle<DjinniWrapperHello> DjinniWrapperHello::wrap(std::shared_ptr<::textsort::Hello> obj) {
    if (obj)
        return djinni::Handle<DjinniWrapperHello>(new DjinniWrapperHello{ std::move(obj) }, hello___wrapper_dec_ref);
    return nullptr;
}

int cw__hello_say_hi(DjinniWrapperHello * djinni_this) {
    try {
        return int32_from_enum_my_enum(djinni_this->wrapped_obj->say_hi());
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}

DjinniRecordHandle * cw__hello_print(DjinniWrapperHello * djinni_this, DjinniRecordHandle * rc) {
    djinni::Handle<DjinniRecordHandle> _rc(rc, my_record___delete);
    try {
        return DjinniMyRecord::fromCpp(djinni_this->wrapped_obj->print(DjinniMyRecord::toCpp(std::move(_rc)))).release();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}
DjinniWrapperHello * cw__hello_create(void) {
    try {
        return DjinniWrapperHello::wrap(::textsort::Hello::create()).release();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}
