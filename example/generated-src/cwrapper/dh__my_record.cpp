// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "my_record.hpp"

#include "dh__list_binary.hpp"
#include "dh__list_enum_my_enum.hpp"
#include "dh__list_record_rc.hpp"
#include "dh__list_uint32_t.hpp"
#include "dh__map_enum_my_enum_int16_t.hpp"
#include "dh__map_int32_t_string.hpp"
#include "dh__my_enum.hpp"
#include "dh__my_record.hpp"
#include "dh__rc.hpp"
#include "dh__set_enum_my_enum.hpp"
#include "dh__set_int32_t.hpp"
#include "my_enum.hpp"
#include <chrono>
#include <optional>
#include <vector>

static void(*s_py_callback_my_record___delete)(DjinniRecordHandle * );
void my_record_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_my_record___delete = ptr;
}

void my_record___delete(DjinniRecordHandle * drh) {
    s_py_callback_my_record___delete(drh);
}
void optional_my_record___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_my_record___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static int32_t ( * s_py_callback_my_record_get_my_record_f1)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f1(int32_t( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f1 = ptr;
}

static DjinniBoxedU32 * ( * s_py_callback_my_record_get_my_record_f2)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f2(DjinniBoxedU32 *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f2 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f3)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f3(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f3 = ptr;
}

static DjinniString * ( * s_py_callback_my_record_get_my_record_f4)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f4(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f4 = ptr;
}

static DjinniString * ( * s_py_callback_my_record_get_my_record_f5)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f5(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f5 = ptr;
}

static uint64_t ( * s_py_callback_my_record_get_my_record_f6)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f6(uint64_t( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f6 = ptr;
}

static DjinniBoxedDate * ( * s_py_callback_my_record_get_my_record_f7)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f7(DjinniBoxedDate *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f7 = ptr;
}

static DjinniBinary * ( * s_py_callback_my_record_get_my_record_f8)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f8(DjinniBinary *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f8 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f9)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f9(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f9 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f10)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f10(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f10 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f11)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f11(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f11 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_my_record_get_my_record_f12)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f12(DjinniRecordHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f12 = ptr;
}

static DjinniOptionalRecordHandle * ( * s_py_callback_my_record_get_my_record_f13)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f13(DjinniOptionalRecordHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f13 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f14)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f14(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f14 = ptr;
}

static int ( * s_py_callback_my_record_get_my_record_f15)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f15(int( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f15 = ptr;
}

static int ( * s_py_callback_my_record_get_my_record_f16)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f16(int( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f16 = ptr;
}

static DjinniBoxedI16 * ( * s_py_callback_my_record_get_my_record_f17)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f17(DjinniBoxedI16 *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f17 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f18)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f18(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f18 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f19)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f19(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f19 = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_my_record_get_my_record_f20)(DjinniRecordHandle *);

void my_record_add_callback_get_my_record_f20(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_my_record_get_my_record_f20 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_my_record_python_create_my_record)(int32_t, DjinniBoxedU32 *, DjinniObjectHandle *, DjinniString *, DjinniString *, uint64_t, DjinniBoxedDate *, DjinniBinary *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniRecordHandle *, DjinniOptionalRecordHandle *, DjinniObjectHandle *, int, int, DjinniBoxedI16 *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniObjectHandle *);

void my_record_add_callback_python_create_my_record(DjinniRecordHandle *( * ptr)(int32_t, DjinniBoxedU32 *, DjinniObjectHandle *, DjinniString *, DjinniString *, uint64_t, DjinniBoxedDate *, DjinniBinary *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniRecordHandle *, DjinniOptionalRecordHandle *, DjinniObjectHandle *, int, int, DjinniBoxedI16 *, DjinniObjectHandle *, DjinniObjectHandle *, DjinniObjectHandle *)) {
    s_py_callback_my_record_python_create_my_record = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniMyRecord::fromCpp(const ::textsort::MyRecord& dr) {
    auto  _field_test1 = DjinniBoxedU32::fromCpp(dr.test1);
    auto  _field_test2 = DjinniListUint32T::fromCpp(dr.test2);
    auto  _field_test3 = DjinniString::fromCpp(dr.test3);
    auto  _field_test3_1 = DjinniOptionalString::fromCpp(dr.test3_1);
    auto  _field_test4_1 = DjinniBoxedDate::fromCpp(dr.test4_1);
    auto  _field_test5 = DjinniBinary::fromCpp(dr.test5);
    auto  _field_test6 = DjinniListBinary::fromCpp(dr.test6);
    auto  _field_test7 = DjinniSetInt32T::fromCpp(dr.test7);
    auto  _field_test8 = DjinniMapInt32TString::fromCpp(dr.test8);
    auto  _field_test9 = DjinniRc::fromCpp(dr.test9);
    auto  _field_test10 = DjinniRc::fromCpp(dr.test10);
    auto  _field_test10_1 = DjinniListRecordRc::fromCpp(dr.test10_1);
    auto  _field_test14 = DjinniBoxedI16::fromCpp(dr.test14);
    auto  _field_test15 = DjinniListEnumMyEnum::fromCpp(dr.test15);
    auto  _field_test16 = DjinniSetEnumMyEnum::fromCpp(dr.test16);
    auto  _field_test17 = DjinniMapEnumMyEnumInt16T::fromCpp(dr.test17);

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_my_record_python_create_my_record(
            dr.test,
            _field_test1.release(),
            _field_test2.release(),
            _field_test3.release(),
            _field_test3_1.release(),
            DjinniDate::fromCpp(dr.test4),
            _field_test4_1.release(),
            _field_test5.release(),
            _field_test6.release(),
            _field_test7.release(),
            _field_test8.release(),
            _field_test9.release(),
            _field_test10.release(),
            _field_test10_1.release(),
            int32_from_enum_my_enum(dr.test11),
            int32_from_enum_my_enum(dr.test13),
            _field_test14.release(),
            _field_test15.release(),
            _field_test16.release(),
            _field_test17.release()),
        my_record___delete);
    return _aux;
}

::textsort::MyRecord DjinniMyRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {
    std::unique_ptr<DjinniBoxedU32> _field_test1(s_py_callback_my_record_get_my_record_f2(dh.get()));
    djinni::Handle<DjinniObjectHandle> _field_test2(s_py_callback_my_record_get_my_record_f3(dh.get()), list_uint32_t___delete);
    std::unique_ptr<DjinniString> _field_test3(s_py_callback_my_record_get_my_record_f4(dh.get()));
    std::unique_ptr<DjinniString> _field_test3_1(s_py_callback_my_record_get_my_record_f5(dh.get()));
    std::unique_ptr<DjinniBoxedDate> _field_test4_1(s_py_callback_my_record_get_my_record_f7(dh.get()));
    std::unique_ptr<DjinniBinary> _field_test5(s_py_callback_my_record_get_my_record_f8(dh.get()));
    djinni::Handle<DjinniObjectHandle> _field_test6(s_py_callback_my_record_get_my_record_f9(dh.get()), list_binary___delete);
    djinni::Handle<DjinniObjectHandle> _field_test7(s_py_callback_my_record_get_my_record_f10(dh.get()), set_int32_t___delete);
    djinni::Handle<DjinniObjectHandle> _field_test8(s_py_callback_my_record_get_my_record_f11(dh.get()), map_int32_t_string___delete);
    djinni::Handle<DjinniRecordHandle> _field_test9(s_py_callback_my_record_get_my_record_f12(dh.get()), rc___delete);
    djinni::Handle<DjinniOptionalRecordHandle> _field_test10(s_py_callback_my_record_get_my_record_f13(dh.get()), optional_rc___delete);
    djinni::Handle<DjinniObjectHandle> _field_test10_1(s_py_callback_my_record_get_my_record_f14(dh.get()), list_record_rc___delete);
    std::unique_ptr<DjinniBoxedI16> _field_test14(s_py_callback_my_record_get_my_record_f17(dh.get()));
    djinni::Handle<DjinniObjectHandle> _field_test15(s_py_callback_my_record_get_my_record_f18(dh.get()), list_enum_my_enum___delete);
    djinni::Handle<DjinniObjectHandle> _field_test16(s_py_callback_my_record_get_my_record_f19(dh.get()), set_enum_my_enum___delete);
    djinni::Handle<DjinniObjectHandle> _field_test17(s_py_callback_my_record_get_my_record_f20(dh.get()), map_enum_my_enum_int16_t___delete);

    auto _aux = ::textsort::MyRecord(
        s_py_callback_my_record_get_my_record_f1(dh.get()),
        DjinniBoxedU32::toCpp(std::move( _field_test1)),
        DjinniListUint32T::toCpp(std::move( _field_test2)),
        DjinniString::toCpp(std::move( _field_test3)),
        DjinniOptionalString::toCpp(std::move( _field_test3_1)),
        DjinniDate::toCpp(s_py_callback_my_record_get_my_record_f6(dh.get())),
        DjinniBoxedDate::toCpp(std::move( _field_test4_1)),
        DjinniBinary::toCpp(std::move( _field_test5)),
        DjinniListBinary::toCpp(std::move( _field_test6)),
        DjinniSetInt32T::toCpp(std::move( _field_test7)),
        DjinniMapInt32TString::toCpp(std::move( _field_test8)),
        DjinniRc::toCpp(std::move( _field_test9)),
        DjinniRc::toCpp(std::move( _field_test10)),
        DjinniListRecordRc::toCpp(std::move( _field_test10_1)),
        static_cast<::textsort::my_enum>(s_py_callback_my_record_get_my_record_f15(dh.get())),
        get_boxed_enum_my_enum_from_int32(s_py_callback_my_record_get_my_record_f16(dh.get())),
        DjinniBoxedI16::toCpp(std::move( _field_test14)),
        DjinniListEnumMyEnum::toCpp(std::move( _field_test15)),
        DjinniSetEnumMyEnum::toCpp(std::move( _field_test16)),
        DjinniMapEnumMyEnumInt16T::toCpp(std::move( _field_test17)));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniMyRecord::fromCpp(std::optional<::textsort::MyRecord> dc) {
    if (dc == std::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniMyRecord::fromCpp(std::move(* dc)), optional_my_record___delete);
}

std::optional<::textsort::MyRecord>DjinniMyRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::optional<::textsort::MyRecord>(DjinniMyRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), my_record___delete)));
    }
    return std::nullopt;
}

