// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#include "NativeMyRecord.hpp"  // my header
#include "JNIMarshal+Json.h"
#include "Marshal.hpp"
#include "NativeMyEnum.hpp"
#include "NativeRc.hpp"

namespace djinni_generated {

NativeMyRecord::NativeMyRecord() = default;

NativeMyRecord::~NativeMyRecord() = default;

auto NativeMyRecord::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeMyRecord>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.test)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::U32>::fromCpp(jniEnv, c.test1)),
                                                           ::djinni::get(::djinni::List<::djinni::U32>::fromCpp(jniEnv, c.test2)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.test3)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::String>::fromCpp(jniEnv, c.test3_1)),
                                                           ::djinni::get(::djinni::Date::fromCpp(jniEnv, c.test4)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::Date>::fromCpp(jniEnv, c.test4_1)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.test5)),
                                                           ::djinni::get(::djinni::List<::djinni::Binary>::fromCpp(jniEnv, c.test6)),
                                                           ::djinni::get(::djinni::Set<::djinni::I32>::fromCpp(jniEnv, c.test7)),
                                                           ::djinni::get(::djinni::Map<::djinni::I32, ::djinni::String>::fromCpp(jniEnv, c.test8)),
                                                           ::djinni::get(::djinni_generated::NativeRc::fromCpp(jniEnv, c.test9)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni_generated::NativeRc>::fromCpp(jniEnv, c.test10)),
                                                           ::djinni::get(::djinni::List<::djinni_generated::NativeRc>::fromCpp(jniEnv, c.test10_1)),
                                                           ::djinni::get(::djinni_generated::NativeMyEnum::fromCpp(jniEnv, c.test11)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni_generated::NativeMyEnum>::fromCpp(jniEnv, c.test13)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::I16>::fromCpp(jniEnv, c.test14)),
                                                           ::djinni::get(::djinni::List<::djinni_generated::NativeMyEnum>::fromCpp(jniEnv, c.test15)),
                                                           ::djinni::get(::djinni::Set<::djinni_generated::NativeMyEnum>::fromCpp(jniEnv, c.test16)),
                                                           ::djinni::get(::djinni::Map<::djinni_generated::NativeMyEnum, ::djinni::I16>::fromCpp(jniEnv, c.test17)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeMyRecord::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 21);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeMyRecord>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mTest)),
            ::djinni::Optional<std::optional, ::djinni::U32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest1)),
            ::djinni::List<::djinni::U32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest2)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mTest3)),
            ::djinni::Optional<std::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mTest31)),
            ::djinni::Date::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest4)),
            ::djinni::Optional<std::optional, ::djinni::Date>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest41)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_mTest5)),
            ::djinni::List<::djinni::Binary>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest6)),
            ::djinni::Set<::djinni::I32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest7)),
            ::djinni::Map<::djinni::I32, ::djinni::String>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest8)),
            ::djinni_generated::NativeRc::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest9)),
            ::djinni::Optional<std::optional, ::djinni_generated::NativeRc>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest10)),
            ::djinni::List<::djinni_generated::NativeRc>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest101)),
            ::djinni_generated::NativeMyEnum::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest11)),
            ::djinni::Optional<std::optional, ::djinni_generated::NativeMyEnum>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest13)),
            ::djinni::Optional<std::optional, ::djinni::I16>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest14)),
            ::djinni::List<::djinni_generated::NativeMyEnum>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest15)),
            ::djinni::Set<::djinni_generated::NativeMyEnum>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest16)),
            ::djinni::Map<::djinni_generated::NativeMyEnum, ::djinni::I16>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mTest17))};
}

}  // namespace djinni_generated
