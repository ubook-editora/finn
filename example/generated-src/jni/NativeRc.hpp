// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#pragma once

#include "djinni_support.hpp"
#include "rc.hpp"

namespace djinni_generated {

class NativeRc final {
public:
    using CppType = ::textsort::Rc;
    using JniType = jobject;

    using Boxed = NativeRc;

    ~NativeRc();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeRc();
    friend ::djinni::JniClass<NativeRc>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/textsort/Rc") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(IILjava/lang/Integer;Lcom/dropbox/textsort/MyEnum;[B)V") };
    const jfieldID field_mA { ::djinni::jniGetFieldID(clazz.get(), "mA", "I") };
    const jfieldID field_mB { ::djinni::jniGetFieldID(clazz.get(), "mB", "I") };
    const jfieldID field_mC { ::djinni::jniGetFieldID(clazz.get(), "mC", "Ljava/lang/Integer;") };
    const jfieldID field_mD { ::djinni::jniGetFieldID(clazz.get(), "mD", "Lcom/dropbox/textsort/MyEnum;") };
    const jfieldID field_mE { ::djinni::jniGetFieldID(clazz.get(), "mE", "[B") };
};

}  // namespace djinni_generated
